# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Change working directory to the top-most Finder window location
function cdf() { # short for `cdfinder`
	cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')";
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* *;
	fi;
}

# Use Gitâ€™s colored diff when available
hash git &>/dev/null;
if [ $? -eq 0 ]; then
	function diff() {
		git diff --no-index --color-words "$@";
	}
fi;

# Start an HTTP server from a directory, optionally specifying the port
function server() {
  local port=${1:-8000}
  sleep 1 && open "http://localhost:${port}/" &
  python3 -m http.server $port
  
}

# Remove exited containers
function dkrm()	{ 
	docker rm $(docker ps -q -f "status=exited") 
}

# Remove dangling images
function dkrmi() { 
	docker rmi $(docker images -q -f "dangling=true") 
}

# List all open ports and related processes
function openports() {
	sudo lsof -iTCP -sTCP:LISTEN -n -P | awk 'NR>1 {print $9, $1, $2}' | sed 's/.*://' | sort -n | while read port process pid; do echo "Port $port: $(ps -p $pid -o command= | sed 's/^-//') (PID: $pid)"; done
}